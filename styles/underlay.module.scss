@import "./variables";

.main {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;

  display: flex;
  justify-content: center;
  align-items: center;

  padding: $padding-100 $padding-200;

  user-select: none;
  pointer-events: none;

  @media only screen and (max-width: 768px) {
    top: auto;
  }

  &.visible {
    h4 {
      opacity: 1;
    }
  }

  // if not mobile
  &.background {
    h1,
    .header,
    .animation {
      color: $color-200;
    }

    @media only screen and (min-width: 768px) {
      h4 {
        color: $color-200;
      }
    }
  }

  &:before {
    content: "";
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    z-index: -1;

    background-image: url(/imgs/textures/noise.png);
    background-size: 100px;

    opacity: 0.14;
    will-change: auto;
    animation: noise 12s steps(3) both infinite;
  }

  h1 {
    $unit-size: calc((100vw - $padding-600 * 2) / 4.4);
    position: fixed;
    bottom: calc($padding-200 - $unit-size * 0.05);
    left: calc($padding-200 - $unit-size * 0.05);

    overflow: hidden;
    text-align: left;

    font-size: $unit-size;
    line-height: 0.9em;

    @media only screen and (max-width: 768px) {
      left: 0;
      bottom: $padding-600;
      width: 100%;

      font-size: 40vw;

      span:first-child {
        margin-bottom: -$padding-100;
      }
    }

    span:last-child > div:nth-of-type(1) {
      margin-left: $padding-150;

      @media only screen and (max-width: 768px) {
        margin-left: 0;
      }
    }
  }

  h4 {
    line-height: 1.2em;

    opacity: 0;
    overflow: hidden;

    transition: opacity $animation-duration-short $animation-easing
      $animation-duration;
  }

  .about {
    text-transform: uppercase;
    white-space: nowrap;
    grid-column: 3 / 5;
    overflow: visible;

    @media only screen and (max-width: 768px) {
      grid-column: 1 / 5;
      font-size: $font-size-150;
    }
  }

  .animation {
    position: relative;

    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    margin-bottom: $padding-150;

    animation: animateIn $animation-duration-long $animation-easing forwards;

    &.cyan {
      color: #0097d3;
    }

    &.orange {
      color: $color-accent;
    }

    h4 {
      opacity: 1 !important;
      letter-spacing: 0.3em;
      line-height: 1.3em;
      color: inherit;
    }

    .arrow {
      width: 12px;
      min-width: 12px;
      max-width: 12px;
      height: auto;
      margin: 2px 4px 0 0;

      @media only screen and (max-width: 768px) {
        width: 10px;
        min-width: 10px;
        max-width: 10px;
        height: auto;
      }
    }
  }
}

@keyframes animateIn {
  0% {
    filter: blur(5px);
  }
  100% {
    filter: blur(0px);
  }
}

@keyframes noise {
  0% {
    transform: translate3d(1%, -1%, 0);
  }

  10% {
    transform: translate3d(-5%, -2%, 0);
  }

  20% {
    transform: translate3d(10%, 5%, 0);
  }

  30% {
    transform: translate3d(5%, -11%, 0);
  }

  40% {
    transform: translate3d(-12%, -5%, 0);
  }

  50% {
    transform: translate3d(10%, 9%, 0);
  }

  60% {
    transform: translate3d(15%, 0, 0);
  }

  70% {
    transform: translate3d(-10%, 8%, 0);
  }

  80% {
    transform: translate3d(10%, 2%, 0);
  }

  90% {
    transform: translate3d(1%, 5%, 0);
  }

  to {
    transform: translate3d(0, 8%, 0);
  }
}
